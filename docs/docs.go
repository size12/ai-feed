// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/article": {
            "get": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Read all articles or one by ID",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "ReadArticles",
                "operationId": "read-articles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "article ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Updates article's text and image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "article"
                ],
                "summary": "UpdateArticle",
                "operationId": "update-article",
                "parameters": [
                    {
                        "description": "new article information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Article"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Saves article's text and image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "article"
                ],
                "summary": "CreateArticle",
                "operationId": "create-article",
                "parameters": [
                    {
                        "description": "article information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Article"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Delete article by ID",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "article"
                ],
                "summary": "DeleteArticle",
                "operationId": "delete-articles",
                "parameters": [
                    {
                        "description": "article ID",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/auth": {
            "post": {
                "description": "Login by credentials, or create new user. Set auth cookie: token={received_token}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "AuthUser",
                "operationId": "auth-user",
                "parameters": [
                    {
                        "description": "account credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/generate/article": {
            "post": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Generates article text and title for theme",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "generate"
                ],
                "summary": "GenerateArticle",
                "operationId": "generate-article",
                "parameters": [
                    {
                        "description": "generate request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GenerateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/generate/image": {
            "post": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Generates image for article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "generate"
                ],
                "summary": "GenerateArticleImage",
                "operationId": "generate-image",
                "parameters": [
                    {
                        "description": "article",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Article"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/personality": {
            "get": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Read all personalities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "personality"
                ],
                "summary": "ReadAllPersonalities",
                "operationId": "read-personalities",
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Updates personality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "personality"
                ],
                "summary": "UpdatePersonality",
                "operationId": "update-personality",
                "parameters": [
                    {
                        "description": "personality updated information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Personality"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Saves personality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "personality"
                ],
                "summary": "CreatePersonality",
                "operationId": "create-personality",
                "parameters": [
                    {
                        "description": "personality information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Personality"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Deletes personality",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "personality"
                ],
                "summary": "DeletePersonality",
                "operationId": "delete-personality",
                "parameters": [
                    {
                        "description": "personality ID",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/theme": {
            "get": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Read user themes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "theme"
                ],
                "summary": "ReadUserThemes",
                "operationId": "read-themes",
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Updated theme",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "theme"
                ],
                "summary": "UpdateTheme",
                "operationId": "update-theme",
                "parameters": [
                    {
                        "description": "theme new description",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Theme"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Creates theme",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "theme"
                ],
                "summary": "CreateTheme",
                "operationId": "create-theme",
                "parameters": [
                    {
                        "description": "theme description",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Theme"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "header": []
                    }
                ],
                "description": "Deletes theme",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "theme"
                ],
                "summary": "DeleteTheme",
                "operationId": "delete-theme",
                "parameters": [
                    {
                        "description": "theme ID",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/theme/feeder": {
            "get": {
                "description": "Read feeder themes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "theme"
                ],
                "summary": "ReadFeederThemes",
                "operationId": "read-feeder-themes",
                "responses": {}
            }
        }
    },
    "definitions": {
        "entity.Article": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_base64": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Keyword"
                    }
                },
                "symbols_count": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "words_count": {
                    "type": "integer"
                }
            }
        },
        "entity.Keyword": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.Personality": {
            "type": "object",
            "required": [
                "biography",
                "keywords",
                "name",
                "text_style",
                "thematics"
            ],
            "properties": {
                "biography": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "text_style": {
                    "type": "string"
                },
                "thematics": {
                    "type": "string"
                }
            }
        },
        "entity.Theme": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.GenerateRequest": {
            "type": "object",
            "required": [
                "personality",
                "theme"
            ],
            "properties": {
                "personality": {
                    "$ref": "#/definitions/entity.Personality"
                },
                "theme": {
                    "$ref": "#/definitions/entity.Theme"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "AI-feed API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
